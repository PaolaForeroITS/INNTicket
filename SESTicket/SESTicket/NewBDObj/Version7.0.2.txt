--==================================================

Create Function fnStringFirstUpper (@String Varchar(5000))
Returns Varchar(5000)
Begin

   set @String 	= lower(@String)

   Declare @RetornoString Varchar(5000)
   Declare @Start Int, @end Int
   Select @Start = 2, @end = Len(@String)
   Select @RetornoString = Upper(Left(@String,1))
   While @start <= @End
   Begin
     If substring(@String,@Start,1) = ' '
     Begin 
        Select @Start = @start + 1
        Select @RetornoString = @RetornoString + ' ' + Upper(substring(@String,@Start,1))
     End
     Else
     Begin
       Select @RetornoString = @RetornoString + substring(@String,@Start,1)
     End
     Select @Start = @start + 1
   End
Return @RetornoString
End

go

--==================================================
ALTER TABLE WORKER
ADD FULLNAME NVARCHAR(MAX) NULL;

UPDATE WORKER SET
FULLNAME = dbo.[fnStringFirstUpper](LTRIM(NAME1) + IIF(SURNAME1 IS NOT NULL, + ' ' + LTRIM(SURNAME1),''));


ALTER TABLE TICKET 
ADD SUPERIORSUPERVISOR NVARCHAR(24)

CREATE NONCLUSTERED INDEX [IX02_TICKET] ON [dbo].[TICKET] ([SUPERIORSUPERVISOR] ASC);

--==================================================


ALTER  PROCEDURE [dbo].[sp_TicketDB]
    @Username			varchar(50)
   ,@ServiceDateBegin   datetime     = null
   ,@ServiceDateEnd     datetime     = null
   ,@TicketId	        varchar(50)  = null
   ,@ProformaVal	    varchar(max) = null
   ,@TicketStatus       varchar(max) = null
   ,@ServiceLineId      varchar(max) = null
   ,@CustomerId         varchar(max) = null
   ,@SiteId             varchar(max) = null

AS
BEGIN
 
    ----------------------
    -- Tratando Parametros
    ----------------------
    set @ServiceDateBegin = cast(floor(cast(@ServiceDateBegin as float)) as datetime);
    set @ServiceDateEnd = cast(floor(cast(@ServiceDateEnd as float)) as datetime);
    
	if @TicketId is not null or @TicketId <> '' begin
	    set @TicketId = '%' + @TicketId + '%'
	end 
	else begin
	    set @TicketId = null
	end;


	if @ProformaVal is null or ISNULL(@ProformaVal,'-1') = '-1' or  @ProformaVal = ''
	    set @ProformaVal = NULL;
	else 
	    set @ProformaVal = '%' + @ProformaVal + '%';


	if @ServiceLineId is  null or @ServiceLineId = '' begin
	    set @ServiceLineId = '-1'
	end;

	if @CustomerId is  null or @CustomerId = '' begin
	    set @CustomerId = '-1'
	end;

	if @SiteId is  null or @SiteId = '' begin
	    set @SiteId = '-1'
	end;
	
	----------------------
    -- Execução
    ----------------------
	WITH TICKETSALESITEMTOTAL (TICKETID,CURRENCY,ITEMAMOUNT)
	AS(
	SELECT TICKET.TICKETID, CONTRACT.CURRENCY, ISNULL(Sum(IIf(CONTRACT.Currency='USD',TICKETSALESITEM.ITEMAMOUNTUSD,TICKETSALESITEM.ITEMAMOUNT)),0) AS ITEMAMOUNT
	FROM TICKET 
	INNER JOIN CONTRACT ON (TICKET.CONTRACTID = CONTRACT.CONTRACTID) 
	LEFT JOIN TICKETSALESITEM ON (TICKET.TICKETID = TICKETSALESITEM.TICKETID)
	GROUP BY TICKET.TICKETID, CONTRACT.CURRENCY)
	SELECT 
	  T.[TICKETID]
	,T.SUPERIORNUM AS PROFORMAVAL
	,[USER].NAME  AS FULLUSERNAME
	,T.[DATESERVICE]
	,[SERVICELINE].NAME SERVICELINE
	,[CUSTOMER].NAME AS CUSTOMERNAME
	,T.CANCELDATETIME 
	,T.CANCELUSER
	,T.CANCELREASON
	,T.TICKETSTATUS
	,T.SYNCDATETIME
	,lower(T.createduser) AS CREATEDUSER
	,WORKER.FULLNAME AS SUPERIORSUPERVNAME
	,T.WELLID
	,T.CONTRACTID
	,(SELECT COUNT(*) FROM TICKETFILE WHERE TICKETFILE.TICKETID = T.TICKETID) AS HASATTACH
	,T.CUSTOMERID
	,[SITE].ALIAS AS SITE
	,[SITE].SITEID
	,[TICKETSALESITEMTOTAL].CURRENCY
	,[TICKETSALESITEMTOTAL].ITEMAMOUNT
	FROM TICKET T
	INNER JOIN [WELL] ON (T.WELLID = [WELL].WELLID)
	INNER JOIN [USER] ON ([USER].USERNAME =T.[CREATEDUSER])
	LEFT JOIN [SITE] ON ([WELL].SITEID = [SITE].SITEID)
	LEFT JOIN [WORKER] ON (T.SUPERIORSUPERVISOR = [WORKER].WORKERID)
	INNER JOIN [SERVICELINE] ON (T.SERVICELINEID = [SERVICELINE].SERVICELINEID)
	INNER JOIN [CUSTOMER] ON (T.CUSTOMERID = [CUSTOMER].CUSTOMERID)
	LEFT JOIN [TICKETSALESITEMTOTAL] ON (T.[TICKETID] = [TICKETSALESITEMTOTAL].[TICKETID])
  where
		1 = 1
	and cast(floor(cast(DATESERVICE as float)) as datetime)  between @ServiceDateBegin and @ServiceDateEnd
	and (T.TICKETID = @TicketId or @TicketId is null or T.TICKETID like @TicketId)
	and (T.SUPERIORNUM = @ProformaVal or (@ProformaVal is null and LEN(IIF(T.SUPERIORNUM IS NULL,'',T.SUPERIORNUM))=0) 
	    or T.SUPERIORNUM like @ProformaVal or @ProformaVal is null)
	and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
	and (T.SERVICELINEID = iif(@ServiceLineId = '-1',T.SERVICELINEID,@ServiceLineId))
	and (T.CUSTOMERID = iif(@CustomerId = '-1',T.CUSTOMERID,@CustomerId))
	and (T.SITEID = iif(@SiteId = '-1',T.SITEID,@SiteId))
	and T.TICKETID in (SELECT T1.TICKETID
					   FROM TICKET T1
					   WHERE
					   T1.CREATEDUSER = @Username
					   OR (T1.CREATEDUSER <> @Username AND TICKETSTATUS in (
					   		SELECT CASE grp.OBJECTNAME 
							WHEN 'bShowTicketOtherUserOpen' THEN 'Open'
							WHEN 'bShowTicketOtherUserClosed' THEN 'Closed'
							WHEN 'bShowTicketOtherUserCanceled' THEN 'Canceled'
							END
							FROM [OBJECTGROUPITEM] grp 
							INNER JOIN [OBJECTGROUPITEMUSER] usr on (grp.OBJECTGROUPITEMID = usr.OBJECTGROUPITEMID)
							WHERE
								1 = 1 
							AND grp.OBJECTFORM = 'frmTicketDB' 
							AND grp.OBJECTNAME IN ('bShowTicketOtherUserOpen','bShowTicketOtherUserClosed','bShowTicketOtherUserCanceled') 
							AND usr.[ENABLE] = 'YES'
							AND usr.USERNAME = @Username ) 
					   )
					   and 1 = 1)
	order by  T.[TICKETID] asc

END

GO


--==================================================

ALTER view [dbo].[INVOICE_TICKET_TOTAL_V] AS
SELECT 
 [TICKET].TICKETID
,[TICKET].SUPERIORNUM 
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPCODE 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Serv/Mat' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT ST.AMOUNTUSD FROM [SALESITEM_TOTAL_L01_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
, 0 AS DISCOUNT
,isnull((SELECT ST.AMOUNTUSD FROM [SALESITEM_TOTAL_L01_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
,[TICKET].SERVICELINEID
,[CONTRACT].CUSTOMERID
,[TICKET].SITEID
,[TICKET].CLOSEDDATE
,[TICKET].DM
,[TICKET].JOBNUMBER
,[TICKET].SERVICEORDERNUM
,[WORKER].FULLNAME AS SUPERIORSUPERVNAME
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Serv/Mat')
LEFT JOIN [WORKER] ON ([TICKET].SUPERIORSUPERVISOR = [WORKER].WORKERID)
WHERE [CONTRACT].LAYOUTTYPE  = 'L01' 
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].SUPERIORNUM 
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPCODE
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Material' as LINETYPE
,[CONTRACT].CURRENCY
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
,[TICKET].SERVICELINEID
,[CONTRACT].CUSTOMERID
,[TICKET].SITEID
,[TICKET].CLOSEDDATE
,[TICKET].DM
,[TICKET].JOBNUMBER
,[TICKET].SERVICEORDERNUM
,[WORKER].FULLNAME AS SUPERIORSUPERVNAME
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Material')
LEFT JOIN [WORKER] ON ([TICKET].SUPERIORSUPERVISOR = [WORKER].WORKERID)
WHERE [CONTRACT].LAYOUTTYPE  = 'L02'  and [CONTRACT].SPLITAMOUNTMATSERV = 'YES'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_MAT_V] WHERE [SALESITEM_TOTAL_L02_MAT_V].TICKETID = [TICKET].TICKETID)
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].SUPERIORNUM 
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPCODE
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Service' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
,[TICKET].SERVICELINEID
,[CONTRACT].CUSTOMERID
,[TICKET].SITEID
,[TICKET].CLOSEDDATE
,[TICKET].DM
,[TICKET].JOBNUMBER
,[TICKET].SERVICEORDERNUM
,[WORKER].FULLNAME AS SUPERIORSUPERVNAME
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Service')
LEFT JOIN [WORKER] ON ([TICKET].SUPERIORSUPERVISOR = [WORKER].WORKERID)
WHERE [CONTRACT].LAYOUTTYPE  = 'L02' and [CONTRACT].SPLITAMOUNTMATSERV = 'YES'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_SERV_V] WHERE [SALESITEM_TOTAL_L02_SERV_V].TICKETID = [TICKET].TICKETID)
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].SUPERIORNUM 
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPCODE
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Serv/Mat' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
,[TICKET].SERVICELINEID
,[CONTRACT].CUSTOMERID
,[TICKET].SITEID
,[TICKET].CLOSEDDATE
,[TICKET].DM
,[TICKET].JOBNUMBER
,[TICKET].SERVICEORDERNUM
,[WORKER].FULLNAME AS SUPERIORSUPERVNAME
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Serv/Mat')
LEFT JOIN [WORKER] ON ([TICKET].SUPERIORSUPERVISOR = [WORKER].WORKERID)
WHERE [CONTRACT].LAYOUTTYPE  = 'L02' and [CONTRACT].SPLITAMOUNTMATSERV = 'NO'
--AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_V] WHERE [SALESITEM_TOTAL_L02_V].TICKETID = [TICKET].TICKETID)


GO


--==================================================


ALTER VIEW [dbo].[INVOICE_V] AS
SELECT 
 I.[TICKETID]
,I.[SUPERIORNUM]
,I.[DATESERVICE]
,STUFF((SELECT char(10) 
     + IIF(ID.INVOICEDATE IS NOT NULL, CONVERT(VARCHAR,ID.INVOICEDATE,103),' ')
	  AS "text()" 
     FROM TICKETINVOICELINE ID
     WHERE ID.ACTIVE = 'YES'
	 AND ID.TICKETID = I.TICKETID
     FOR XML PATH('')),1,1, '') AS INVOICEDATE
,STUFF((SELECT char(10) 
	 + 'Invoice: ' + IIF(ID.INVOICENUMBER IS NOT NULL, ID.INVOICENUMBER,' ')
     + ' Date: ' + IIF(ID.INVOICEDATE IS NOT NULL, CONVERT(VARCHAR,ID.INVOICEDATE,103),' ')
	 + ' Amount: ' + IIF(ID.INVOICEAMOUNT IS NOT NULL, CAST(ID.INVOICEAMOUNT AS VARCHAR),' ')
	  AS "text()" 
     FROM TICKETINVOICELINE ID
     WHERE ID.ACTIVE = 'YES'
	 AND ID.TICKETID = I.TICKETID
     FOR XML PATH('')),1,1, '') AS INVOICEDETAIL
,I.[CREATEDBY]
,I.[TICKETSTATUS]
,I.[SERVICELINE]
,I.[CUSTOMER]
,I.[CONTRACTNUMBER]
,I.[SITE]
,I.[WELLID]
,I.[LINETYPE]
,I.SERVICETYPEGRPCODE 
,I.SERVICETYPE
,I.[CURRENCY]
,I.[SUBTOTAL]
,I.[DISCOUNT]
,I.[TICKETTOTAL]
,I.[TICKETINVOICEID]
,I.[INVOICESTATUS]
,I.SERVICELINEID
,I.CUSTOMERID
,I.SITEID
,ISNULL((SELECT SUM(LN.INVOICEAMOUNT) FROM [TICKETINVOICELINE] LN 
WHERE LN.TICKETINVOICEID = I.TICKETINVOICEID AND [ACTIVE] = 'YES'),0) AS INVOICETOTAL
,(ISNULL((SELECT SUM(LN.INVOICEAMOUNT) FROM [TICKETINVOICELINE] LN 
WHERE LN.TICKETINVOICEID = I.TICKETINVOICEID AND [ACTIVE] = 'YES'),0) - I.[TICKETTOTAL]) 
 AS DIF
,I.CLOSEDDATE
,I.DM
,I.JOBNUMBER
,I.SERVICEORDERNUM
,I.SUPERIORSUPERVNAME
FROM [INVOICE_TICKET_TOTAL_V]  I

GO

--==================================================

ALTER  PROCEDURE [dbo].[sp_TicketInvoice]
    @DateType	        varchar(50)  = 'Service Date'
   ,@DateBegin          datetime     = null
   ,@DateEnd            datetime     = null

   ,@TicketId	        varchar(max)  = null
   ,@SuperiorNum	    varchar(max) = null
   ,@TicketStatus       varchar(max) = null
   ,@InvoiceStatus      varchar(max) = null
   ,@InvoiceNumber      varchar(max) = null

   ,@ServiceLineId      varchar(max) = null
   ,@CustomerId         varchar(max) = null
   ,@SiteId             varchar(max) = null

 
AS
DECLARE @TmpTicketList TABLE (TICKETID NVARCHAR(50))

BEGIN
 
    ----------------------
    -- Tratando Parametros
    ----------------------
    set @DateBegin = cast(floor(cast(@DateBegin as float)) as datetime);
    set @DateEnd = cast(floor(cast(@DateEnd as float)) as datetime);
    
	if @TicketId is not null or @TicketId <> '' begin
	    set @TicketId = '%' + @TicketId + '%'
	end 
	else begin
	    set @TicketId = null
	end;

	if @InvoiceNumber is  null or @InvoiceNumber = '' 
	    set @InvoiceNumber = null;

	
	if @SuperiorNum is null or ISNULL(@SuperiorNum,'-1') = '-1' or  @SuperiorNum = ''
	    set @SuperiorNum = NULL;
	else 
	    set @SuperiorNum = '%' + @SuperiorNum + '%';


	if @ServiceLineId is  null or @ServiceLineId = '' begin
	    set @ServiceLineId = '-1'
	end;

	if @CustomerId is  null or @CustomerId = '' begin
	    set @CustomerId = '-1'
	end;

	if @SiteId is  null or @SiteId = '' begin
	    set @SiteId = '-1'
	end;

	if @TicketStatus is null or @TicketStatus = '-1' or @TicketStatus = 'All' begin
	    set @TicketStatus = 'Open,Closed'
	end;
		

	----------------------
    -- Execução
    ----------------------
	IF  @DateType = 'Service Date' 
		insert into @TmpTicketList (TICKETID)
		select DISTINCT T.TICKETID 
		from TICKET T
		left join TICKETINVOICELINE IL ON (T.TICKETID = IL.TICKETID and (IL.ACTIVE = 'YES'))
		where
		1 = 1
		and cast(floor(cast(T.DATESERVICE as float)) as datetime)  between @DateBegin and @DateEnd
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
		and (T.TICKETID = @TicketId or @TicketId is null or T.TICKETID like @TicketId)
		and (T.SUPERIORNUM = @SuperiorNum or (@SuperiorNum is null and LEN(IIF(T.SUPERIORNUM IS NULL,'',T.SUPERIORNUM))=0) 
	    or T.SUPERIORNUM like @SuperiorNum or @SuperiorNum is null)
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
			and (T.SERVICELINEID = iif(@ServiceLineId = '-1',T.SERVICELINEID,@ServiceLineId))
		and (T.CUSTOMERID = iif(@CustomerId = '-1',T.CUSTOMERID,@CustomerId))
		and (T.SITEID = iif(@SiteId = '-1',T.SITEID,@SiteId))
		and (IL.INVOICENUMBER = @InvoiceNumber or @InvoiceNumber is null )
		;
		
	else if  @DateType = 'Invoice Date' 
	
		insert into @TmpTicketList (TICKETID)
		select DISTINCT T.TICKETID 
		from TICKET T
		left join TICKETINVOICELINE IL ON (T.TICKETID = IL.TICKETID and (IL.ACTIVE = 'YES') )
		where
		1 = 1
		and (IL.INVOICEDATE between cast(@DateBegin as date) and cast(@DateEnd as date))
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
		and (T.TICKETID = @TicketId or @TicketId is null or T.TICKETID like @TicketId)
		and (T.SUPERIORNUM = @SuperiorNum or (@SuperiorNum is null and LEN(IIF(T.SUPERIORNUM IS NULL,'',T.SUPERIORNUM))=0) 
	    or T.SUPERIORNUM like @SuperiorNum or @SuperiorNum is null)
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
			and (T.SERVICELINEID = iif(@ServiceLineId = '-1',T.SERVICELINEID,@ServiceLineId))
		and (T.CUSTOMERID = iif(@CustomerId = '-1',T.CUSTOMERID,@CustomerId))
		and (T.SITEID = iif(@SiteId = '-1',T.SITEID,@SiteId))
		and (IL.INVOICENUMBER = @InvoiceNumber or @InvoiceNumber is null )
		;
	
	else
		insert into @TmpTicketList (TICKETID)
		select DISTINCT T.TICKETID 
		from TICKET T
		left join TICKETINVOICELINE IL ON (T.TICKETID = IL.TICKETID and (IL.ACTIVE = 'YES') )
		where
		1 = 1
		and (T.CLOSEDDATE between cast(@DateBegin as date) and cast(@DateEnd as date))
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
		and (T.TICKETID = @TicketId or @TicketId is null or T.TICKETID like @TicketId)
		and (T.SUPERIORNUM = @SuperiorNum or (@SuperiorNum is null and LEN(IIF(T.SUPERIORNUM IS NULL,'',T.SUPERIORNUM))=0) 
	    or T.SUPERIORNUM like @SuperiorNum or @SuperiorNum is null)
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
			and (T.SERVICELINEID = iif(@ServiceLineId = '-1',T.SERVICELINEID,@ServiceLineId))
		and (T.CUSTOMERID = iif(@CustomerId = '-1',T.CUSTOMERID,@CustomerId))
		and (T.SITEID = iif(@SiteId = '-1',T.SITEID,@SiteId))
		and (IL.INVOICENUMBER = @InvoiceNumber or @InvoiceNumber is null )
		;

	----------------------
    -- Query Final
    ----------------------
	SELECT 
	 I.[TICKETID]
	,I.[SUPERIORNUM]
	,I.[DATESERVICE]
	,I.[INVOICEDATE]
	,I.[INVOICEDETAIL]
	,I.[CREATEDBY]
	,I.[TICKETSTATUS]
	,I.[SERVICELINE]
	,I.[CUSTOMER]
	,I.[CONTRACTNUMBER]
	,I.[SITE]
	,I.[WELLID]
	,I.[LINETYPE]
	,I.SERVICETYPEGRPCODE 
	,I.SERVICETYPE
	,I.[CURRENCY]
	,I.[SUBTOTAL]
	,I.[DISCOUNT]
	,I.[TICKETTOTAL]
	,I.[TICKETINVOICEID]
	,I.[INVOICESTATUS]
	,I.[SERVICELINEID]
	,I.[CUSTOMERID]
	,I.[SITEID]
	,I.[INVOICETOTAL]
	,I.[DIF]
	,I.CLOSEDDATE
	,I.DM
	,I.JOBNUMBER
	,I.SERVICEORDERNUM
	,I.SUPERIORSUPERVNAME
	FROM [INVOICE_V] I 
	INNER JOIN @TmpTicketList TMP ON (I.TICKETID = TMP.TICKETID)
	WHERE
	1 =1
	and (I.INVOICESTATUS in (select * from dbo.fnStringMultValues (@InvoiceStatus)) OR @InvoiceStatus IS NULL)
	order by  I.[DATESERVICE] asc;

END

GO


--==================================================
INSERT INTO OBJECTGROUPITEM
VALUES (55,19,'frmTicket','bPermitChangeSuperiorSupervisor','VAR','Permit Change Superior´s Supervisor','NO');

INSERT INTO [OBJECTGROUPITEMUSER] (USERNAME,OBJECTGROUPITEMID,[ENABLE])
SELECT USERNAME,55,'NO'
FROM [USER];

--mudar qquer usuario pra atualizar a tabela
--==================================================

--==================================================
