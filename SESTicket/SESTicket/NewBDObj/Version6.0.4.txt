ALTER TABLE TICKET
ADD JOBNUMBER NVARCHAR(255)
,SERVICEORDERNUM VARCHAR(255)
ALTER TABLE TICKET
add SITEID NVARCHAR(10)


ALTER TABLE TICKET
add CONSTRAINT FK_TICKET_SITE
FOREIGN KEY (SITEID)
REFERENCES SITE (SITEID)

create index IX01_TICKET ON TICKET(SITEID)

ALTER TABLE TICKET
ADD	[HOURTRAVEL] [float] DEFAULT 0  NULL,
	[HOUROPERATION] [float]  DEFAULT 0  NULL,
	[HOURSTANDBY] [float] DEFAULT 0   NULL,
	[HOURLOST] [float]  DEFAULT 0  NULL,
	[HOURQDE] [float] DEFAULT 0   NULL

--TEM QUE COLOCAR NO SCRIPT DE MIGRACAO
UPDATE TICKET SET SITEID=(SELECT W.SITEID FROM WELL W WHERE W.WELLID = TICKET.WELLID);

ALTER view [dbo].[INVOICE_TICKET_TOTAL_V] AS
SELECT 
 [TICKET].TICKETID
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Serv/Mat' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT ST.AMOUNTUSD FROM [SALESITEM_TOTAL_L01_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
, 0 AS DISCOUNT
,isnull((SELECT ST.AMOUNTUSD FROM [SALESITEM_TOTAL_L01_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Serv/Mat')
WHERE [CONTRACT].LAYOUTTYPE  = 'L01' 
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Material' as LINETYPE
,[CONTRACT].CURRENCY
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Material')
WHERE [CONTRACT].LAYOUTTYPE  = 'L02'  and [CONTRACT].SPLITAMOUNTMATSERV = 'YES'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_MAT_V] WHERE [SALESITEM_TOTAL_L02_MAT_V].TICKETID = [TICKET].TICKETID)
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Service' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Service')
WHERE [CONTRACT].LAYOUTTYPE  = 'L02' and [CONTRACT].SPLITAMOUNTMATSERV = 'YES'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_SERV_V] WHERE [SALESITEM_TOTAL_L02_SERV_V].TICKETID = [TICKET].TICKETID)
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Serv/Mat' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Serv/Mat')
WHERE [CONTRACT].LAYOUTTYPE  = 'L02' and [CONTRACT].SPLITAMOUNTMATSERV = 'NO'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_V] WHERE [SALESITEM_TOTAL_L02_V].TICKETID = [TICKET].TICKETID)
GO





ALTER view [dbo].[INVOICE_TICKET_TOTAL_V] AS
SELECT 
 [TICKET].TICKETID
,[TICKET].SUPERIORNUM AS SERVICETICKET
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPCODE 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Serv/Mat' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT ST.AMOUNTUSD FROM [SALESITEM_TOTAL_L01_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
, 0 AS DISCOUNT
,isnull((SELECT ST.AMOUNTUSD FROM [SALESITEM_TOTAL_L01_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
,[TICKET].SERVICELINEID
,[CONTRACT].CUSTOMERID
,[TICKET].SITEID
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Serv/Mat')
WHERE [CONTRACT].LAYOUTTYPE  = 'L01' 
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].SUPERIORNUM AS SERVICETICKET
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPCODE
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Material' as LINETYPE
,[CONTRACT].CURRENCY
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
,[TICKET].SERVICELINEID
,[CONTRACT].CUSTOMERID
,[TICKET].SITEID
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Material')
WHERE [CONTRACT].LAYOUTTYPE  = 'L02'  and [CONTRACT].SPLITAMOUNTMATSERV = 'YES'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_MAT_V] WHERE [SALESITEM_TOTAL_L02_MAT_V].TICKETID = [TICKET].TICKETID)
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].SUPERIORNUM AS SERVICETICKET
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPCODE
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Service' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
,[TICKET].SERVICELINEID
,[CONTRACT].CUSTOMERID
,[TICKET].SITEID
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Service')
WHERE [CONTRACT].LAYOUTTYPE  = 'L02' and [CONTRACT].SPLITAMOUNTMATSERV = 'YES'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_SERV_V] WHERE [SALESITEM_TOTAL_L02_SERV_V].TICKETID = [TICKET].TICKETID)
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].SUPERIORNUM AS SERVICETICKET
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPCODE
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Serv/Mat' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
,[TICKET].SERVICELINEID
,[CONTRACT].CUSTOMERID
,[TICKET].SITEID
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([TICKET].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Serv/Mat')
WHERE [CONTRACT].LAYOUTTYPE  = 'L02' and [CONTRACT].SPLITAMOUNTMATSERV = 'NO'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_V] WHERE [SALESITEM_TOTAL_L02_V].TICKETID = [TICKET].TICKETID)



ALTER VIEW [dbo].[INVOICE_V] AS
SELECT 
 I.[TICKETID]
,I.[SERVICETICKET]
,I.[DATESERVICE]
,STUFF((SELECT char(10) 
     + IIF(ID.INVOICEDATE IS NOT NULL, CONVERT(VARCHAR,ID.INVOICEDATE,103),' ')
	  AS "text()" 
     FROM TICKETINVOICELINE ID
     WHERE ID.ACTIVE = 'YES'
	 AND ID.TICKETID = I.TICKETID
     FOR XML PATH('')),1,1, '') AS INVOICEDATE
,STUFF((SELECT char(10) 
	 + 'Invoice: ' + IIF(ID.INVOICENUMBER IS NOT NULL, ID.INVOICENUMBER,' ')
     + ' Date: ' + IIF(ID.INVOICEDATE IS NOT NULL, CONVERT(VARCHAR,ID.INVOICEDATE,103),' ')
	 + ' Amount: ' + IIF(ID.INVOICEAMOUNT IS NOT NULL, CAST(ID.INVOICEAMOUNT AS VARCHAR),' ')
	 + ' GP/AX: ' + IIF(ID.AX_GP_NUMBER IS NOT NULL, ID.AX_GP_NUMBER,' ')
	 + ' Comment: ' + IIF(ID.COMMENT IS NOT NULL, ID.COMMENT,' ')
	  AS "text()" 
     FROM TICKETINVOICELINE ID
     WHERE ID.ACTIVE = 'YES'
	 AND ID.TICKETID = I.TICKETID
     FOR XML PATH('')),1,1, '') AS INVOICEDETAIL
,I.[CREATEDBY]
,I.[TICKETSTATUS]
,I.[SERVICELINE]
,I.[CUSTOMER]
,I.[CONTRACTNUMBER]
,I.[SITE]
,I.[WELLID]
,I.[LINETYPE]
,I.SERVICETYPEGRPCODE 
,I.SERVICETYPE
,I.[CURRENCY]
,I.[SUBTOTAL]
,I.[DISCOUNT]
,I.[TICKETTOTAL]
,I.[TICKETINVOICEID]
,I.[INVOICESTATUS]
,I.SERVICELINEID
,I.CUSTOMERID
,I.SITEID
,ISNULL((SELECT SUM(LN.INVOICEAMOUNT) FROM [TICKETINVOICELINE] LN 
WHERE LN.TICKETINVOICEID = I.TICKETINVOICEID AND [ACTIVE] = 'YES'),0) AS INVOICETOTAL
,(ISNULL((SELECT SUM(LN.INVOICEAMOUNT) FROM [TICKETINVOICELINE] LN 
WHERE LN.TICKETINVOICEID = I.TICKETINVOICEID AND [ACTIVE] = 'YES'),0) - I.[TICKETTOTAL]) 
 AS DIF
FROM [INVOICE_TICKET_TOTAL_V]  I


GO


CREATE  PROCEDURE [dbo].[sp_TicketInvoice]
    @DateType	        varchar(50)  = 'Service Date'
   ,@DateBegin          datetime     = null
   ,@DateEnd            datetime     = null

   ,@TicketId	        varchar(max)  = null
   ,@ServiceTicket	    varchar(max) = null
   ,@TicketStatus       varchar(max) = null
   ,@InvoiceStatus      varchar(max) = null
   ,@InvoiceNumber      varchar(max) = null

   ,@ServiceLineId      varchar(max) = null
   ,@CustomerId         varchar(max) = null
   ,@SiteId             varchar(max) = null

 
AS
DECLARE @TmpTicketList TABLE (TICKETID NVARCHAR(50))

BEGIN
 
    ----------------------
    -- Tratando Parametros
    ----------------------
    set @DateBegin = cast(floor(cast(@DateBegin as float)) as datetime);
    set @DateEnd = cast(floor(cast(@DateEnd as float)) as datetime);
    
	if @TicketId is not null or @TicketId <> '' begin
	    set @TicketId = '%' + @TicketId + '%'
	end 
	else begin
	    set @TicketId = null
	end;

	if @InvoiceNumber is  null or @InvoiceNumber = '' 
	    set @InvoiceNumber = null;

	
	if @ServiceTicket is null or ISNULL(@ServiceTicket,'-1') = '-1' or  @ServiceTicket = ''
	    set @ServiceTicket = NULL;
	else 
	    set @ServiceTicket = '%' + @ServiceTicket + '%';


	if @ServiceLineId is  null or @ServiceLineId = '' begin
	    set @ServiceLineId = '-1'
	end;

	if @CustomerId is  null or @CustomerId = '' begin
	    set @CustomerId = '-1'
	end;

	if @SiteId is  null or @SiteId = '' begin
	    set @SiteId = '-1'
	end;

	if @TicketStatus is null or @TicketStatus = '-1' or @TicketStatus = 'All' begin
	    set @TicketStatus = 'Open,Closed'
	end;
		

	----------------------
    -- Execução
    ----------------------
	IF  @DateType = 'Service Date' 
		insert into @TmpTicketList (TICKETID)
		select DISTINCT T.TICKETID 
		from TICKET T
		left join TICKETINVOICELINE IL ON (T.TICKETID = IL.TICKETID and (IL.ACTIVE = 'YES'))
		where
		1 = 1
		and cast(floor(cast(T.DATESERVICE as float)) as datetime)  between @DateBegin and @DateEnd
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
		and (T.TICKETID = @TicketId or @TicketId is null or T.TICKETID like @TicketId)
		and (T.SUPERIORNUM = @ServiceTicket or (@ServiceTicket is null and LEN(IIF(T.SUPERIORNUM IS NULL,'',T.SUPERIORNUM))=0) 
	    or T.SUPERIORNUM like @ServiceTicket or @ServiceTicket is null)
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
			and (T.SERVICELINEID = iif(@ServiceLineId = '-1',T.SERVICELINEID,@ServiceLineId))
		and (T.CUSTOMERID = iif(@CustomerId = '-1',T.CUSTOMERID,@CustomerId))
		and (T.SITEID = iif(@SiteId = '-1',T.SITEID,@SiteId))
		and (IL.INVOICENUMBER = @InvoiceNumber or @InvoiceNumber is null )
		;
		
	else
	
		insert into @TmpTicketList (TICKETID)
		select DISTINCT T.TICKETID 
		from TICKET T
		left join TICKETINVOICELINE IL ON (T.TICKETID = IL.TICKETID and (IL.ACTIVE = 'YES') )
		where
		1 = 1
		and (IL.INVOICEDATE between cast(@DateBegin as date) and cast(@DateEnd as date))
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
		and (T.TICKETID = @TicketId or @TicketId is null or T.TICKETID like @TicketId)
		and (T.SUPERIORNUM = @ServiceTicket or (@ServiceTicket is null and LEN(IIF(T.SUPERIORNUM IS NULL,'',T.SUPERIORNUM))=0) 
	    or T.SUPERIORNUM like @ServiceTicket or @ServiceTicket is null)
		and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
			and (T.SERVICELINEID = iif(@ServiceLineId = '-1',T.SERVICELINEID,@ServiceLineId))
		and (T.CUSTOMERID = iif(@CustomerId = '-1',T.CUSTOMERID,@CustomerId))
		and (T.SITEID = iif(@SiteId = '-1',T.SITEID,@SiteId))
		and (IL.INVOICENUMBER = @InvoiceNumber or @InvoiceNumber is null )
		;
	
	----------------------
    -- Query Final
    ----------------------
	SELECT 
	 I.[TICKETID]
	,I.[SERVICETICKET]
	,I.[DATESERVICE]
	,I.[INVOICEDATE]
	,I.[INVOICEDETAIL]
	,I.[CREATEDBY]
	,I.[TICKETSTATUS]
	,I.[SERVICELINE]
	,I.[CUSTOMER]
	,I.[CONTRACTNUMBER]
	,I.[SITE]
	,I.[WELLID]
	,I.[LINETYPE]
	,I.SERVICETYPEGRPCODE 
	,I.SERVICETYPE
	,I.[CURRENCY]
	,I.[SUBTOTAL]
	,I.[DISCOUNT]
	,I.[TICKETTOTAL]
	,I.[TICKETINVOICEID]
	,I.[INVOICESTATUS]
	,I.[SERVICELINEID]
	,I.[CUSTOMERID]
	,I.[SITEID]
	,I.[INVOICETOTAL]
	,I.[DIF]
	FROM [INVOICE_V] I 
	INNER JOIN @TmpTicketList TMP ON (I.TICKETID = TMP.TICKETID)
	WHERE
	1 =1
	and (I.INVOICESTATUS in (select * from dbo.fnStringMultValues (@InvoiceStatus)) OR @InvoiceStatus IS NULL)
	order by  I.[DATESERVICE] asc;

END



GO


ALTER TABLE CONTRACTPRICELIST
ADD  PERMITNEGATIVE    NVARCHAR(3) DEFAULT 'NO' NOT NULL
,PERMITUPDATEDESCRIP   NVARCHAR(3) DEFAULT 'YES' NOT NULL
,PERMITUPDATEPRICEUNIT NVARCHAR(3) DEFAULT 'YES' NOT NULL;

CREATE TABLE [dbo].[OBJECTGROUP](
	[OBJECTGROUPID] [int] NOT NULL,
	[GROUPNAME] [nvarchar](200) NOT NULL,
	[SUBGROUP] [nvarchar](200) NOT NULL,
	[MENUREF] [nvarchar](200) NOT NULL,
	[ENABLE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_OBJECTGROUP] PRIMARY KEY CLUSTERED 
(
	[OBJECTGROUPID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[OBJECTGROUP] ADD  DEFAULT ('NO') FOR [ENABLE]
GO

CREATE TABLE [dbo].[OBJECTGROUPITEM](
	[OBJECTGROUPITEMID] [int] NOT NULL,
	[OBJECTGROUPID] [int] NOT NULL,
	[OBJECTFORM] [varchar](200) NOT NULL,
	[OBJECTNAME] [varchar](200) NOT NULL,
	[OBJECTTYPE] [varchar](100) NOT NULL,
	[OBJECTDESCRIPTION] [varchar](300) NOT NULL,
	[ENABLE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_OBJECTGROUPITEM] PRIMARY KEY CLUSTERED 
(
	[OBJECTGROUPITEMID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[OBJECTGROUPITEM] ADD  DEFAULT ('NO') FOR [ENABLE]
GO

CREATE TABLE [dbo].[OBJECTGROUPITEMUSER](
	[OBJECTGROUPITEMUSERID] [int] IDENTITY(1,1) NOT NULL,
	[USERNAME] [varchar](100) NOT NULL,
	[OBJECTGROUPITEMID] [int] NOT NULL,
	[ENABLE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_OBJECTGROUPITEMUSER] PRIMARY KEY CLUSTERED 
(
	[OBJECTGROUPITEMUSERID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[OBJECTGROUPITEMUSER] ADD  DEFAULT ('YES') FOR [ENABLE]
GO


CREATE TABLE [dbo].[OBJECTGROUPUSER](
	[OBJECTGROUPUSERID] [int] IDENTITY(1,1) NOT NULL,
	[USERNAME] [varchar](100) NOT NULL,
	[OBJECTGROUPID] [int] NOT NULL,
	[ENABLE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_OBJECTGROUPUSER] PRIMARY KEY CLUSTERED 
(
	[OBJECTGROUPUSERID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[OBJECTGROUPUSER] ADD  DEFAULT ('YES') FOR [ENABLE]
GO


CREATE TABLE [dbo].[OBJECTGROUP](
	[OBJECTGROUPID] [int] NOT NULL,
	[GROUPNAME] [nvarchar](200) NOT NULL,
	[SUBGROUP] [nvarchar](200) NOT NULL,
	[ENABLE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_OBJECTGROUP] PRIMARY KEY CLUSTERED 
(
	[OBJECTGROUPID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[OBJECTGROUP] ADD  DEFAULT ('NO') FOR [ENABLE]
GO



CREATE TABLE [dbo].[OBJECTGROUPITEM](
	[OBJECTGROUPITEMID] [int] NOT NULL,
	[OBJECTGROUPID] [int] NOT NULL,
	[OBJECTFORM] [varchar](200) NOT NULL,
	[OBJECTNAME] [varchar](200) NOT NULL,
	[OBJECTTYPE] [varchar](100) NOT NULL,
	[OBJECTDESCRIPTION] [varchar](300) NOT NULL,
	[ENABLE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_OBJECTGROUPITEM] PRIMARY KEY CLUSTERED 
(
	[OBJECTGROUPITEMID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[OBJECTGROUPITEM] ADD  DEFAULT ('NO') FOR [ENABLE]
GO

CREATE TABLE [dbo].[OBJECTGROUPITEMUSER](
	[OBJECTGROUPITEMUSERID] [int] IDENTITY(1,1) NOT NULL,
	[USERNAME] [varchar](100) NOT NULL,
	[OBJECTGROUPITEMID] [int] NOT NULL,
	[ENABLE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_OBJECTGROUPITEMUSER] PRIMARY KEY CLUSTERED 
(
	[OBJECTGROUPITEMUSERID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[OBJECTGROUPITEMUSER] ADD  DEFAULT ('YES') FOR [ENABLE]
GO

CREATE TABLE [dbo].[OBJECTGROUPUSER](
	[OBJECTGROUPUSERID] [int] IDENTITY(1,1) NOT NULL,
	[USERNAME] [varchar](100) NOT NULL,
	[OBJECTGROUPID] [int] NOT NULL,
	[ENABLE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_OBJECTGROUPUSER] PRIMARY KEY CLUSTERED 
(
	[OBJECTGROUPUSERID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[OBJECTGROUPUSER] ADD  DEFAULT ('YES') FOR [ENABLE]
GO

--============================================
insert into OBJECTGROUPUSER (USERNAME,OBJECTGROUPID,ENABLE)
selecT U.USERNAME,IT.OBJECTGROUPID,IT.[ENABLE]
FROM OBJECTGROUP IT, [USER] U

insert into OBJECTGROUPITEMUSER (USERNAME,OBJECTGROUPITEMID,ENABLE)
selecT U.USERNAME,IT.OBJECTGROUPITEMID,IT.[ENABLE]
FROM OBJECTGROUPITEM IT, [USER] U
--============================================

CREATE  PROCEDURE [dbo].[sp_TicketDB]
    @Username			varchar(50)
   ,@ServiceDateBegin   datetime     = null
   ,@ServiceDateEnd     datetime     = null
   ,@TicketId	        varchar(50)  = null
   ,@ServiceTicket	    varchar(max) = null
   ,@TicketStatus       varchar(max) = null
   ,@ServiceLineId      varchar(max) = null
   ,@CustomerId         varchar(max) = null
   ,@SiteId             varchar(max) = null

AS
BEGIN
 
    ----------------------
    -- Tratando Parametros
    ----------------------
    set @ServiceDateBegin = cast(floor(cast(@ServiceDateBegin as float)) as datetime);
    set @ServiceDateEnd = cast(floor(cast(@ServiceDateEnd as float)) as datetime);
    
	if @TicketId is not null or @TicketId <> '' begin
	    set @TicketId = '%' + @TicketId + '%'
	end 
	else begin
	    set @TicketId = null
	end;


	if @ServiceTicket is null or ISNULL(@ServiceTicket,'-1') = '-1' or  @ServiceTicket = ''
	    set @ServiceTicket = NULL;
	else 
	    set @ServiceTicket = '%' + @ServiceTicket + '%';


	if @ServiceLineId is  null or @ServiceLineId = '' begin
	    set @ServiceLineId = '-1'
	end;

	if @CustomerId is  null or @CustomerId = '' begin
	    set @CustomerId = '-1'
	end;

	if @SiteId is  null or @SiteId = '' begin
	    set @SiteId = '-1'
	end;
	
	----------------------
    -- Execução
    ----------------------
	WITH TICKETSALESITEMTOTAL (TICKETID,CURRENCY,ITEMAMOUNT)
	AS(
	SELECT TICKET.TICKETID, CONTRACT.CURRENCY, ISNULL(Sum(IIf(CONTRACT.Currency='USD',TICKETSALESITEM.ITEMAMOUNTUSD,TICKETSALESITEM.ITEMAMOUNT)),0) AS ITEMAMOUNT
	FROM TICKET 
	INNER JOIN CONTRACT ON (TICKET.CONTRACTID = CONTRACT.CONTRACTID) 
	LEFT JOIN TICKETSALESITEM ON (TICKET.TICKETID = TICKETSALESITEM.TICKETID)
	GROUP BY TICKET.TICKETID, CONTRACT.CURRENCY)
	SELECT 
	  T.[TICKETID]
	,T.SUPERIORNUM AS SERVICETICKET
	,[USER].NAME  AS FULLUSERNAME
	,T.[DATESERVICE]
	,[SERVICELINE].NAME SERVICELINE
	,[CUSTOMER].NAME AS CUSTOMERNAME
	,T.CANCELDATETIME 
	,T.CANCELUSER
	,T.CANCELREASON
	,T.TICKETSTATUS
	,T.SYNCDATETIME
	,lower(T.createduser) AS CREATEDUSER
	,T.WELLID
	,T.CONTRACTID
	,(SELECT COUNT(*) FROM TICKETFILE WHERE TICKETFILE.TICKETID = T.TICKETID) AS HASATTACH
	,T.CUSTOMERID
	,[SITE].ALIAS AS SITE
	,[SITE].SITEID
	,[TICKETSALESITEMTOTAL].CURRENCY
	,[TICKETSALESITEMTOTAL].ITEMAMOUNT
	FROM TICKET T
	INNER JOIN [WELL] ON (T.WELLID = [WELL].WELLID)
	INNER JOIN [USER] ON ([USER].USERNAME =T.[CREATEDUSER])
	LEFT JOIN [SITE] ON ([WELL].SITEID = [SITE].SITEID)
	INNER JOIN [SERVICELINE] ON (T.SERVICELINEID = [SERVICELINE].SERVICELINEID)
	INNER JOIN [CUSTOMER] ON (T.CUSTOMERID = [CUSTOMER].CUSTOMERID)
	LEFT JOIN [TICKETSALESITEMTOTAL] ON (T.[TICKETID] = [TICKETSALESITEMTOTAL].[TICKETID])
  where
		1 = 1
	and cast(floor(cast(DATESERVICE as float)) as datetime)  between @ServiceDateBegin and @ServiceDateEnd
	and (T.TICKETID = @TicketId or @TicketId is null or T.TICKETID like @TicketId)
	and (T.SUPERIORNUM = @ServiceTicket or (@ServiceTicket is null and LEN(IIF(T.SUPERIORNUM IS NULL,'',T.SUPERIORNUM))=0) 
	    or T.SUPERIORNUM like @ServiceTicket or @ServiceTicket is null)
	and (T.TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) )
	and (T.SERVICELINEID = iif(@ServiceLineId = '-1',T.SERVICELINEID,@ServiceLineId))
	and (T.CUSTOMERID = iif(@CustomerId = '-1',T.CUSTOMERID,@CustomerId))
	and (T.SITEID = iif(@SiteId = '-1',T.SITEID,@SiteId))
	and T.TICKETID in (SELECT T1.TICKETID
					   FROM TICKET T1
					   WHERE
					   T1.CREATEDUSER = @Username
					   OR (T1.CREATEDUSER <> @Username AND TICKETSTATUS in (
					   		SELECT CASE grp.OBJECTNAME 
							WHEN 'bShowTicketOtherUserOpen' THEN 'Open'
							WHEN 'bShowTicketOtherUserClosed' THEN 'Closed'
							WHEN 'bShowTicketOtherUserCanceled' THEN 'Canceled'
							END
							FROM [OBJECTGROUPITEM] grp 
							INNER JOIN [OBJECTGROUPITEMUSER] usr on (grp.OBJECTGROUPITEMID = usr.OBJECTGROUPITEMID)
							WHERE
								1 = 1 
							AND grp.OBJECTFORM = 'frmTicketDB' 
							AND grp.OBJECTNAME IN ('bShowTicketOtherUserOpen','bShowTicketOtherUserClosed','bShowTicketOtherUserCanceled') 
							AND usr.[ENABLE] = 'YES'
							AND usr.USERNAME = @Username ) 
					   )
					   and 1 = 1)
	order by  T.[TICKETID] asc

END


GO

ALTER TABLE EQUIPMENT
ADD UNIT NVARCHAR(MAX) NULL;

ALTER TABLE TICKETEQUIPMENT
ADD TICKETEQUIPMENTID NVARCHAR(255) NULL,
CONSUMPTION FLOAT DEFAULT 0 NOT NULL;

alter table ticketequipment
drop constraint [PK_TICKETEQUIPMENT];

CREATE VIEW TICKETCLOSE_V AS
select TICKETID
,SUPERIORNUM
,IIF(T.NOINVITEM=1,'YES',IIF((SELECT COUNT(*) AS QDE FROM [TICKETINVHEADER] INV WHERE INV.TICKETID = T.TICKETID)=0,'NO','YES'))
AS HASINVENTORY
, IIF((SELECT COUNT(*) FROM TICKETSERVICETYPE ST WHERE ST.TICKETID=T.TICKETID)=0,'NO','YES') 
AS HASSERVICETYPE
from TICKET T

============================================================================================
DECLARE @TicketId  nvarchar(50)
DECLARE @EquipID  nvarchar(30)

DECLARE tkqEquip CURSOR FOR
SELECT TICKETID,EQUIPMENTID
FROM [TICKETEQUIPMENT]
WHERE
TICKETEQUIPMENTID IS NULL
ORDER BY TICKETID
 
BEGIN
 
OPEN tkqEquip  
FETCH NEXT FROM tkqEquip INTO @TicketId, @EquipID

WHILE @@FETCH_STATUS = 0  
BEGIN  

	    DECLARE @seq nvarchar(255)

	  --SEQUENCE
	  SELECT @seq = 
		CASE 
		WHEN Max(cast(Right(TICKETEQUIPMENTID,3) as integer))+1 IS NULL THEN @TicketId + '.001'
		WHEN Max(cast(Right(TICKETEQUIPMENTID,3) as integer))+1 =''     THEN @TicketId + '.001'
		WHEN Max(cast(Right(TICKETEQUIPMENTID,3) as integer))+1 <>''    THEN @TicketId + '.' + Right('000' + CAST(Max(cast(Right(TICKETEQUIPMENTID,3) as integer))+1 AS VARCHAR), 3)
		end 
		FROM [TICKETEQUIPMENT]
		WHERE
		TICKETID = @TicketId

	  UPDATE TICKETEQUIPMENT SET TICKETEQUIPMENTID = @seq, CONSUMPTION = 0 WHERE TICKETID=@TicketId AND EQUIPMENTID = @EquipID

	  ------------------------------------------------------

      FETCH NEXT FROM tkqEquip INTO @TicketId, @EquipID
END 

CLOSE db_cursor  
DEALLOCATE db_cursor 

END


GO


