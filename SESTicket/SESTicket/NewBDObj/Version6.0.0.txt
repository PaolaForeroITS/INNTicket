Version Framwork 4.7.1



ALTER TABLE TICKETWORKER
ADD HOURTRAVEL FLOAT DEFAULT 0 NOT NULL;
ALTER TABLE TICKETWORKER
ADD HOUROPERATION FLOAT DEFAULT 0 NOT NULL;
ALTER TABLE TICKETWORKER
ADD HOURSTANDBY FLOAT DEFAULT 0 NOT NULL;
ALTER TABLE TICKETWORKER
ADD HOURLOST FLOAT DEFAULT 0 NOT NULL;

UPDATE TICKETWORKER SET HOUROPERATION=HOURQDE;

ALTER TABLE TICKET
DROP COLUMN RIG;

ALTER TABLE TICKET
ADD RIGID NVARCHAR(50) NULL;

ALTER TABLE TICKET
ADD CONSTRAINT FK_TICKET_RIG
FOREIGN KEY (RIGID) REFERENCES RIG(RIGID);

falta ajustar a proc do sql do relatorio no caso do RIG
e o dataset

ALTER TABLE SERVICETYPE
ADD SERVICETYPECODE NVARCHAR(50);

CREATE TABLE TICKETSERVICETYPE
(TICKETSERVICETYPEID NVARCHAR(255) NOT NULL
,TICKETID NVARCHAR(50) NOT NULL
,SERVICETYPEID INT NOT NULL
);

ALTER TABLE TICKETSERVICETYPE
ADD CONSTRAINT PK_TICKETSERVICETYPE
PRIMARY KEY (TICKETSERVICETYPEID);

ALTER TABLE TICKETSERVICETYPE
ADD CONSTRAINT FK_TICKETSERVICETYPE_TICKET
FOREIGN KEY (TICKETID)
REFERENCES TICKET (TICKETID);

ALTER TABLE TICKETSERVICETYPE
ADD CONSTRAINT FK_TICKETSERVICETYPE_SERVICETYPEID
FOREIGN KEY (SERVICETYPEID)
REFERENCES SERVICETYPE(SERVICETYPEID);

INSERT INTO TICKETSERVICETYPE
selecT TICKETID + '.001',TICKETID,SERVICETYPEID from TICKET;

ALTER TABLE TICKET
ALTER COLUMN SERVICETYPEID INT NULL;


ALTER TABLE TICKET
ADD SERVICETYPEGRPCODE VARCHAR(MAX);

ALTER TABLE TICKET
ADD SERVICETYPEGRPTEXT VARCHAR(MAX);

ALTER TABLE TICKET
ADD SUPERIORNUM VARCHAR(255);

ALTER TABLE TICKET
ADD DM VARCHAR(255);

--mudança da tabela PETRFIELD
ALTER TABLE [dbo].[WELL]  DROP  CONSTRAINT [FK_WELL_PETRFIELD] ;
ALTER TABLE [dbo].[PETRFIELD] DROP CONSTRAINT [PK_CAMPS];

ALTER TABLE [dbo].[PETRFIELD] ADD PETRFIELDCODE NVARCHAR(100);
ALTER TABLE [dbo].[PETRFIELD] ADD DESCRIP NVARCHAR(350);
ALTER TABLE [dbo].[PETRFIELD] ADD PETRFIELDAREA NVARCHAR(500);

UPDATE [dbo].[PETRFIELD] SET PETRFIELDCODE = PETRFIELDID, DESCRIP = PETRFIELDID;

ALTER TABLE [dbo].[PETRFIELD] DROP COLUMN PETRFIELDID;
ALTER TABLE [dbo].[PETRFIELD]  ADD PETRFIELDID INT IDENTITY (1,1) NOT NULL;

EXEC sp_RENAME 'WELL.PETRFIELDID', 'PETRFIELDID_OLD', 'COLUMN';

ALTER TABLE WELL ADD PETRFIELDID INT NULL;
UPDATE WELL SET PETRFIELDID = (SELECT P.PETRFIELDID FROM PETRFIELD P WHERE P.PETRFIELDCODE = WELL.PETRFIELDID_OLD);

ALTER TABLE PETRFIELD ADD CONSTRAINT PK_PETRFIELD PRIMARY KEY (PETRFIELDID);

ALTER TABLE [dbo].[WELL]  ADD  CONSTRAINT [FK_WELL_PETRFIELD] FOREIGN KEY([PETRFIELDID])
REFERENCES [dbo].[PETRFIELD] ([PETRFIELDID]);

ALTER TABLE [dbo].WELL DROP COLUMN PETRFIELDID_OLD;

ALTER VIEW [dbo].[WELL_V] AS
SELECT well.WELLID
, well.NAME
, well.PETRFIELDID
, PETRFIELD.PETRFIELDCODE
, well.COUNTRY
, well.STATE
, well.CITY
, well.SITEID
, well.ACTIVE
, site.NAME AS SITENAME
, well.RIGID
FROM well
INNER JOIN site ON (well.SITEID = site.SITEID)
LEFT JOIN PETRFIELD ON (PETRFIELD.PETRFIELDID = WELL.PETRFIELDID) ;

ALTER VIEW [dbo].[TICKETHEADERRPT_V] AS
WITH TICKETAMOUNT (
TICKETID, 
ITEMAMOUNTNODISC_COP, DISCVALUE_COP, ITEMAMOUNT_COP,
ITEMAMOUNTNODISC_USD, DISCVALUE_USD, ITEMAMOUNT_USD) AS
(
SELECT 
 TS.TICKETID
,sum(TS.ITEMAMOUNTNODISC   ) AS ITEMAMOUNTNODISC_COP
,sum(TS.DISCVALUE          ) AS DISCVALUE_COP
,sum(TS.ITEMAMOUNT         ) AS ITEMAMOUNT_COP
,sum(TS.ITEMAMOUNTNODISCUSD) AS ITEMAMOUNTNODISC_USD
,sum(TS.DISCVALUEUSD       ) AS DISCVALUE_USD
,sum(TS.ITEMAMOUNTUSD      ) AS ITEMAMOUNT_USD
FROM TICKETSALESITEM TS
GROUP BY TS.TICKETID
)
SELECT 
 T.TICKETID
,T.DATESERVICE
,(SELECT U.NAME FROM [USER] U WHERE U.USERNAME = T.CREATEDUSER) AS CREATEDUSER
,T.CREATEDDATETIME
,T.CUSTOMERID AS CUSTOMERCODE
,C.NAME AS CUSTOMERNAME
,CT.CONTRACTNUMBER AS CONTRACT
,T.SERVICETYPEGRPCODE AS SERVICETYPECODE
,T.SERVICETYPEGRPTEXT AS SERVICETYPE
,T.WELLID
,T.RIGID AS RIG
,T.EXCHANGERATE
,T.CURRENCYID
,CASE T.CURRENCYID WHEN 'USD' THEN TA.ITEMAMOUNTNODISC_USD ELSE TA.ITEMAMOUNTNODISC_COP END AS ITEMAMOUNTNODISC
,CASE T.CURRENCYID WHEN 'USD' THEN TA.DISCVALUE_USD ELSE TA.DISCVALUE_COP END AS DISCVALUE
,CASE T.CURRENCYID WHEN 'USD' THEN TA.ITEMAMOUNT_USD ELSE TA.ITEMAMOUNT_COP END AS ITEMAMOUNT
,T.TIMEARRIVED
,T.TIMESTARTED
,T.TIMECOMPLETED
,T.CASINGSIZE
,T.CASINGWEIGHT
,T.CASINGGRADE
,T.TUBINGSIZE
,T.TUBINGWEIGHT
,T.TUBINGGRADE
,T.PRESSUREMAX
,T.DEPTHMAX
,T.JOBDESCRIPTION
,T.CUSTREPRES
,T.CUSTREPRESPOSITION
,T.CUSTREPRESASSIST
,(CONTREP.[NAME1] + ' ' +
CASE WHEN CONTREP.[NAME2] IS NULL OR CONTREP.[NAME2]='' THEN '' ELSE LEFT(CONTREP.[NAME2],1) + '. ' END +
CASE WHEN CONTREP.[SURNAME1] IS NULL OR CONTREP.[NAME2]='' THEN '' ELSE LEFT(CONTREP.[SURNAME1],1) + '. ' END +
CONTREP.[SURNAME2]) AS CONTRACTORREPRESENTATIVE
,T.CUSTCOMMENTS
,T.CONTRACTCOMMENTS
,T.TICKETSTATUS
,T.UPDATEDDATETIME
,(SELECT U.NAME FROM [USER] U WHERE U.USERNAME = T.UPDATEDUSER) AS UPDATEDUSER
,T.CANCELDATETIME
,(SELECT U.NAME FROM [USER] U WHERE U.USERNAME = T.CANCELUSER) AS CANCELUSER
,T.CANCELREASON
,STUFF((SELECT ' / ' + INV.LINETYPE + ': ' + INVOICESTATUS AS "text()" 
		FROM  TICKETINVOICE INV
		WHERE INV.TICKETID = T.TICKETID
     FOR XML PATH('')),1,3, '') AS INVOICESTATUS
,STUFF((SELECT ' / ' + 'Invoice: ' + ISNULL(LINE.INVOICENUMBER,'') + ' Amount: ' + CAST(LINE.INVOICEAMOUNT AS VARCHAR) 
		+ ' (' + INV.LINETYPE + ')' AS "text()" 
		FROM  TICKETINVOICE INV
		INNER JOIN TICKETINVOICELINE LINE ON (INV.TICKETINVOICEID = LINE.TICKETINVOICEID)
		WHERE INV.TICKETID = T.TICKETID AND LINE.ACTIVE = 'YES'
     FOR XML PATH('')),1,3, '') AS INVOICENNUMBER
,(SELECT  SUM(LINE.INVOICEAMOUNT) 
		FROM  TICKETINVOICE INV
		INNER JOIN TICKETINVOICELINE LINE ON (INV.TICKETINVOICEID = LINE.TICKETINVOICEID)
		WHERE INV.TICKETID = T.TICKETID AND LINE.ACTIVE = 'YES') AS INVOICEAMOUNT
,T.SUPERIORNUM 
,T.DM
,ST.ALIAS AS SITE
,(SELECT COUNT(*) FROM TICKETSERVICETYPE TS WHERE T.TICKETID = TS.TICKETID) AS QTDE_SERVICETYPE
FROM TICKET T  
   INNER JOIN CUSTOMER C  ON (T.CUSTOMERID = C.CUSTOMERID)
   INNER JOIN CONTRACT CT ON (T.CONTRACTID = CT.CONTRACTID)
   INNER JOIN WORKER CONTREP ON (T.CONTRACTORREPRESENTATIVE = CONTREP.WORKERID)
   INNER JOIN WELL W ON (T.WELLID = W.WELLID)
   INNER JOIN [SITE] ST ON (ST.SITEID = w.SITEID)
   LEFT JOIN TICKETAMOUNT TA ON (TA.TICKETID = T.TICKETID)
go


ALTER VIEW [dbo].[TICKETHEADERBYINVOICERPT_V] AS
WITH TICKETAMOUNT (
TICKETID, 
ITEMAMOUNTNODISC_COP, DISCVALUE_COP, ITEMAMOUNT_COP,
ITEMAMOUNTNODISC_USD, DISCVALUE_USD, ITEMAMOUNT_USD) AS
(
SELECT 
 TS.TICKETID
,sum(TS.ITEMAMOUNTNODISC   ) AS ITEMAMOUNTNODISC_COP
,sum(TS.DISCVALUE          ) AS DISCVALUE_COP
,sum(TS.ITEMAMOUNT         ) AS ITEMAMOUNT_COP
,sum(TS.ITEMAMOUNTNODISCUSD) AS ITEMAMOUNTNODISC_USD
,sum(TS.DISCVALUEUSD       ) AS DISCVALUE_USD
,sum(TS.ITEMAMOUNTUSD      ) AS ITEMAMOUNT_USD
FROM TICKETSALESITEM TS
GROUP BY TS.TICKETID
)
SELECT 
 T.TICKETID
,T.DATESERVICE
,(SELECT U.NAME FROM [USER] U WHERE U.USERNAME = T.CREATEDUSER) AS CREATEDUSER
,T.CREATEDDATETIME
,T.CUSTOMERID AS CUSTOMERCODE
,C.NAME AS CUSTOMERNAME
,CT.CONTRACTNUMBER AS CONTRACT
,T.SERVICETYPEGRPCODE AS SERVICETYPECODE
,T.SERVICETYPEGRPTEXT AS SERVICETYPE
,T.WELLID
,T.RIGID AS RIG
,T.EXCHANGERATE
,T.CURRENCYID
,CASE T.CURRENCYID WHEN 'USD' THEN TA.ITEMAMOUNTNODISC_USD ELSE TA.ITEMAMOUNTNODISC_COP END AS ITEMAMOUNTNODISC
,CASE T.CURRENCYID WHEN 'USD' THEN TA.DISCVALUE_USD ELSE TA.DISCVALUE_COP END AS DISCVALUE
,CASE T.CURRENCYID WHEN 'USD' THEN TA.ITEMAMOUNT_USD ELSE TA.ITEMAMOUNT_COP END AS ITEMAMOUNT
,T.TIMEARRIVED
,T.TIMESTARTED
,T.TIMECOMPLETED
,T.CASINGSIZE
,T.CASINGWEIGHT
,T.CASINGGRADE
,T.TUBINGSIZE
,T.TUBINGWEIGHT
,T.TUBINGGRADE
,T.PRESSUREMAX
,T.DEPTHMAX
,T.JOBDESCRIPTION
,T.CUSTREPRES
,T.CUSTREPRESPOSITION
,T.CUSTREPRESASSIST
,(CONTREP.[NAME1] + ' ' +
CASE WHEN CONTREP.[NAME2] IS NULL OR CONTREP.[NAME2]='' THEN '' ELSE LEFT(CONTREP.[NAME2],1) + '. ' END +
CASE WHEN CONTREP.[SURNAME1] IS NULL OR CONTREP.[NAME2]='' THEN '' ELSE LEFT(CONTREP.[SURNAME1],1) + '. ' END +
CONTREP.[SURNAME2]) AS CONTRACTORREPRESENTATIVE
,T.CUSTCOMMENTS
,T.CONTRACTCOMMENTS
,T.TICKETSTATUS
,T.UPDATEDDATETIME
,(SELECT U.NAME FROM [USER] U WHERE U.USERNAME = T.UPDATEDUSER) AS UPDATEDUSER
,T.CANCELDATETIME
,(SELECT U.NAME FROM [USER] U WHERE U.USERNAME = T.CANCELUSER) AS CANCELUSER
,T.CANCELREASON
,INV.LINETYPE AS INVOICETYPE
,INV.INVOICESTATUS 
,LINE.INVOICENUMBER
,LINE.INVOICEDATE  
,LINE.INVOICEAMOUNT 
,LINE.AX_GP_NUMBER 
,LINE.COMMENT AS INVOICECOMMENT
,T.SUPERIORNUM 
,T.DM
,ST.ALIAS AS SITE
,(SELECT COUNT(*) FROM TICKETSERVICETYPE TS WHERE T.TICKETID = TS.TICKETID) AS QTDE_SERVICETYPE
FROM TICKET T  
   INNER JOIN CUSTOMER C  ON (T.CUSTOMERID = C.CUSTOMERID)
   INNER JOIN CONTRACT CT ON (T.CONTRACTID = CT.CONTRACTID)
   INNER JOIN WORKER CONTREP ON (T.CONTRACTORREPRESENTATIVE = CONTREP.WORKERID)
   INNER JOIN WELL W ON (T.WELLID = W.WELLID)
   INNER JOIN [SITE] ST ON (ST.SITEID = w.SITEID)
   LEFT JOIN TICKETINVOICE INV ON (T.TICKETID = INV.TICKETID)
   LEFT JOIN TICKETINVOICELINE LINE ON (INV.TICKETINVOICEID = LINE.TICKETINVOICEID)
   LEFT JOIN TICKETAMOUNT TA ON (TA.TICKETID = T.TICKETID)
go

ALTER view [dbo].[INVOICE_TICKET_TOTAL_V] AS
SELECT 
 [TICKET].TICKETID
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Serv/Mat' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT ST.AMOUNTUSD FROM [SALESITEM_TOTAL_L01_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
, 0 AS DISCOUNT
,isnull((SELECT ST.AMOUNTUSD FROM [SALESITEM_TOTAL_L01_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([WELL].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Serv/Mat')
WHERE [CONTRACT].LAYOUTTYPE  = 'L01' 
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Material' as LINETYPE
,[CONTRACT].CURRENCY
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_MAT_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([WELL].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Material')
WHERE [CONTRACT].LAYOUTTYPE  = 'L02'  and [CONTRACT].SPLITAMOUNTMATSERV = 'YES'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_MAT_V] WHERE [SALESITEM_TOTAL_L02_MAT_V].TICKETID = [TICKET].TICKETID)
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Service' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_SERV_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([WELL].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Service')
WHERE [CONTRACT].LAYOUTTYPE  = 'L02' and [CONTRACT].SPLITAMOUNTMATSERV = 'YES'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_SERV_V] WHERE [SALESITEM_TOTAL_L02_SERV_V].TICKETID = [TICKET].TICKETID)
union all
SELECT 
 [TICKET].TICKETID
,[TICKET].DATESERVICE
,U.NAME AS CREATEDBY
,[TICKET].TICKETSTATUS 
,[TICKET].SERVICETYPEGRPTEXT AS SERVICETYPE
,[TICKET].JOBDESCRIPTION 
,[SERVICELINE].NAME AS SERVICELINE
,[CUSTOMER].NAME AS CUSTOMER
,[CONTRACT].CONTRACTNUMBER 
,[SITE].ALIAS AS SITE
,[TICKET].WELLID 
,'Serv/Mat' as LINETYPE
,[CONTRACT].CURRENCY 
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal'),0) AS SUBTOTAL
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS DISCOUNT
,isnull((SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'SubTotal') 
-(SELECT IIF([CONTRACT].CURRENCY = 'USD',ST.AMOUNTUSD,ST.AMOUNT) FROM [SALESITEM_TOTAL_L02_V] ST WHERE ST.TICKETID = [TICKET].TICKETID AND LINETYPE = 'Discount'),0) AS TICKETTOTAL
,[TICKETINVOICE].TICKETINVOICEID
,ISNULL([TICKETINVOICE].INVOICESTATUS,'No Invoiced') as INVOICESTATUS
FROM [TICKET] 
INNER JOIN [CONTRACT] ON ([TICKET].CONTRACTID = [CONTRACT].CONTRACTID)
INNER JOIN [CUSTOMER] ON ([CONTRACT].CUSTOMERID = [CUSTOMER].CUSTOMERID)
INNER JOIN [USER] U   ON ([TICKET].CREATEDUSER = U.USERNAME)
INNER JOIN [SERVICELINE] ON ([TICKET].SERVICELINEID = [SERVICELINE].SERVICELINEID)
INNER JOIN [WELL] ON ([TICKET].WELLID = [WELL].WELLID)
INNER JOIN [SITE] ON ([WELL].SITEID = [SITE].SITEID)
LEFT JOIN  [TICKETINVOICE] ON ([TICKET].TICKETID = [TICKETINVOICE].TICKETID AND [TICKETINVOICE].LINETYPE = 'Serv/Mat')
WHERE [CONTRACT].LAYOUTTYPE  = 'L02' and [CONTRACT].SPLITAMOUNTMATSERV = 'NO'
AND EXISTS (SELECT 1 FROM [SALESITEM_TOTAL_L02_V] WHERE [SALESITEM_TOTAL_L02_V].TICKETID = [TICKET].TICKETID)


GO


ALTER VIEW [dbo].[TICKETINVENTORYRPT_V] AS
SELECT 
 II.INVENTORYITEMID
,II.DESCRIPTION as INVENTORYITEMNAME
,II.INVENTORYCLASSID
,TI.UNIT
,TI.ITEMQTY
,T.TICKETID
,T.TICKETSTATUS
,T.JOBDESCRIPTION AS TICKETDESCRIPTION
,T.CUSTOMERID
,CUS.NAME AS CUSTOMERNAME
,CTR.CONTRACTNUMBER AS CONTRACTID
,TSI.CUSTCODEITEM AS SALESITEMID
,TSI.DESCRIPTION AS SALESITEMDESCRIPTION
,UCTICKET.NAME AS [CREATEDBY]
,T.DATESERVICE AS SERVICEDATE
,W.NAME AS WELL
,T.RIGID as RIG
,TI.COMMENTS
,[CURRENCY]
,IIF([CURRENCY]='USD',[PRICEUNITUSD],[PRICEUNIT]) AS PRICEUNIT
,TSI.[ITEMQTY] as SALESITEMQTY
,IIF([CURRENCY]='USD',[ITEMAMOUNTNODISCUSD],[ITEMAMOUNTNODISC]) AS ITEMAMOUNTNODISC
,[ITEMDISC]
,IIF([CURRENCY]='USD',[ITEMAMOUNTUSD],[ITEMAMOUNT]) AS ITEMAMOUNT
FROM 
TICKET T 
  INNER JOIN CONTRACT CTR ON (T.CONTRACTID = CTR.CONTRACTID)
  INNER JOIN CUSTOMER CUS ON (T.CUSTOMERID = CUS.CUSTOMERID)
  INNER JOIN TICKETSALESITEM TSI ON (T.TICKETID = TSI.TICKETID)
  INNER JOIN TICKETINVENTORY TI ON (TSI.TICKETSALESITEMID = TI.TICKETSALESITEMID)
  INNER JOIN INVENTORYITEM II ON (TI.INVENTORYITEMID = II.INVENTORYITEMID)
  INNER JOIN [USER] UCTICKET ON (T.CREATEDUSER = UCTICKET.USERNAME)
  INNER JOIN WELL W ON (W.WELLID = T.WELLID)
  
GO

----------------------
--INCLUIR NA ARGENTINA
-----------------------
CREATE TABLE TICKETINVHEADER
(TICKETINVHEADERID  [nvarchar](255) NOT NULL,
[TICKETID] NVARCHAR(50) NOT NULL,
[INVENTORYITEMID] [varchar](30) NOT NULL,
[DESCRIPTION] [varchar](350) NULL,
[LOTE] [nvarchar](max) NULL,
[DESPATCHED] [float] DEFAULT 0  NOT NULL,
[CONSUMPTION] [float] DEFAULT 0 NOT NULL,
[RETURNED] [float] DEFAULT 0 NOT NULL,
[COMMENTS] [nvarchar](max) NULL,
[CREATEDUSER] [nvarchar](30) NOT NULL,
[CREATEDDATETIME] [datetime] NOT NULL,
[UPDATEDDATETIME] [datetime] NULL,
[UPDATEDUSER] [nvarchar](30) NULL,
);

ALTER TABLE TICKETINVHEADER
ADD CONSTRAINT PK_TICKETINVHEADER
PRIMARY KEY (TICKETINVHEADERID);

CREATE TABLE TICKETINVLINE
(TICKETINVLINEID  [nvarchar](255) NOT NULL
,TICKETINVHEADERID  [nvarchar](255) NOT NULL
,[TICKETSALESITEMID] NVARCHAR(255) NOT NULL
,[ITEMQTY] [float] NOT NULL
,[COMMENTS] [nvarchar](max) NULL
,[CREATEDUSER] [nvarchar](30) NOT NULL
,[CREATEDDATETIME] [datetime] NOT NULL
,[UPDATEDDATETIME] [datetime] NULL
,[UPDATEDUSER] [nvarchar](30) NULL
);

ALTER TABLE TICKETINVLINE
ADD CONSTRAINT PK_TICKETINVLINE
PRIMARY KEY (TICKETINVLINEID);

ALTER TABLE TICKETINVLINE
ADD CONSTRAINT FK_TICKETINVLINE_TICKETINVHEADER
FOREIGN KEY (TICKETINVHEADERID)
REFERENCES TICKETINVHEADER (TICKETINVHEADERID);

ALTER TABLE TICKETINVLINE
ADD CONSTRAINT FK_TICKETINVLINE_TICKETSALESITEM
FOREIGN KEY ([TICKETSALESITEMID])
REFERENCES [TICKETSALESITEM] ([TICKETSALESITEMID]);

INSERT INTO TICKETINVHEADER (TICKETINVHEADERID,[TICKETID]
,[INVENTORYITEMID],[DESCRIPTION],[CREATEDUSER],[CREATEDDATETIME])
SELECT DISTINCT 
(SELECT MIN(TI2.TICKETINVENTORYID) 
FROM TICKETINVENTORY TI2 
WHERE SUBSTRING(TI2.TICKETINVENTORYID,1,LEN(TI2.TICKETINVENTORYID)-4) = 
SUBSTRING(TI.TICKETINVENTORYID,1,LEN(TI.TICKETINVENTORYID)-4)
AND TI.INVENTORYITEMID = TI2.INVENTORYITEMID)
,SUBSTRING(TI.TICKETINVENTORYID,1,LEN(TI.TICKETINVENTORYID)-4) AS TICKETID 
,TI.INVENTORYITEMID
,TI.[DESCRIPTION]
,TI.[CREATEDUSER]
,GETDATE()
FROM TICKETINVENTORY TI;

INSERT INTO TICKETINVLINE
(TICKETINVLINEID,TICKETINVHEADERID,[TICKETSALESITEMID]
,[ITEMQTY],[COMMENTS],[CREATEDUSER],[CREATEDDATETIME]
,[UPDATEDDATETIME],[UPDATEDUSER])
SELECT TI.TICKETINVENTORYID AS TICKETINVLINEID
,(SELECT TI2.TICKETINVHEADERID FROM TICKETINVHEADER TI2
WHERE TI2.TICKETID = SUBSTRING(TI.TICKETINVENTORYID,1,LEN(TI.TICKETINVENTORYID)-4)
AND TI.INVENTORYITEMID = TI2.INVENTORYITEMID
) AS TICKETINVHEADERID
,TI.TICKETSALESITEMID 
,TI.ITEMQTY 
,TI.COMMENTS 
,TI.CREATEDUSER 
,TI.CREATEDDATETIME 
,TI.[UPDATEDDATETIME] 
,TI.UPDATEDUSER 
FROM [dbo].[TICKETINVENTORY] TI;

UPDATE TICKETINVHEADER SET
CONSUMPTION = (SELECT SUM([ITEMQTY]) 
FROM TICKETINVLINE 
WHERE TICKETINVHEADER.TICKETINVHEADERID = TICKETINVLINE.TICKETINVHEADERID);


CREATE TABLE TICKETINVADIC
(TICKETINVADICID  [nvarchar](255) NOT NULL,
[TICKETID] NVARCHAR(50) NOT NULL,
DISPATCHED DATETIME NULL,
RETURNED DATETIME NULL,
TRANSPCOMPANY NVARCHAR(300) NULL,
DRIVER NVARCHAR(300) NULL,
WAREHOUSERESP NVARCHAR(300) NULL,
OPERATIONRESP NVARCHAR(300) NULL,
ENGENEERRESP NVARCHAR(300) NULL,
COMMENTS NVARCHAR(MAX) NULL
)

ALTER TABLE TICKETINVADIC
ADD CONSTRAINT PK_TICKETINVADIC
PRIMARY KEY (TICKETINVADICID)

ALTER TABLE TICKET ADD
NOINVITEM INT DEFAULT 0 NOT NULL

UPDATE TICKET SET TICKET.NOINVITEM=1 
WHERE TICKET.TICKETID NOT IN (
SELECt SI.TICKETID  FROM TICKETSALESITEM SI WHERE SI.TICKETSALESITEMID not IN (
SELECT TICKETSALESITEMID FROM TICKETINVENTORY )
);

create table CONTRACTREPLAYOUT
(CONTRACTREPLAYOUT INT IDENTITY(1,1) NOT NULL
,CONTRACTID INT NOT NULL
,REPORTCODE VARCHAR(255) NOT NULL
);

ALTER TABLE CONTRACTREPLAYOUT
ADD CONSTRAINT PK_CONTRACTREPLAYOUT
PRIMARY KEY (CONTRACTREPLAYOUT);


INSERT INTO CONTRACTREPLAYOUT (CONTRACTID,REPORTCODE)
SELECT CONTRACT.CONTRACTID,Q1.REPORTCODE
FROM CONTRACT
,(
SELECT 'Default01' AS REPORTCODE
UNION ALL SELECT 'EcopetrolMaterial'
UNION ALL SELECT 'EcopetrolService'
UNION ALL SELECT 'Model02'
UNION ALL SELECT 'Model03Material'
UNION ALL SELECT 'Model03Service'
UNION ALL SELECT 'Model04'
UNION ALL SELECT 'PacificMetapetroleum'
) Q1;

UPDATE VERSIONBASETABLE SET SYNCDATETIME=GETDATE()  WHERE TABLENAME = 'CONTRACT';
INSERT INTO VERSIONBASETABLE VALUES ('CONTRACTREPLAYOUT',GETDATE(),17);
UPDATE VERSIONBASE SET VERSIONBASE=GETDATE();

CREATE TABLE REPORTTICKETLIST
(COUNTRYCODE VARCHAR(10) NOT NULL
,REPORTCODE VARCHAR(255) NULL
,REPORTNAME VARCHAR(255) NULL
,REPORD INT
);

INSERT INTO REPORTTICKETLIST VALUES ('COL','','',0);
INSERT INTO REPORTTICKETLIST VALUES ('ARG','','',0);
INSERT INTO REPORTTICKETLIST VALUES ('COL','Default01','Model 01 - No Discount and Portion',1);
INSERT INTO REPORTTICKETLIST VALUES ('COL','EcopetrolMaterial','Ecopetrol - Material',6);
INSERT INTO REPORTTICKETLIST VALUES ('COL','EcopetrolService','Ecopetrol - Service',5);
INSERT INTO REPORTTICKETLIST VALUES ('COL','Model02','Model 02 - Price Base and Utility Calculated',2);
INSERT INTO REPORTTICKETLIST VALUES ('COL','Model03Material','Model 03 - No Discount and Portion - Material',4);
INSERT INTO REPORTTICKETLIST VALUES ('COL','Model03Service','Model 03 - No Discount and Portion - Service',3);
INSERT INTO REPORTTICKETLIST VALUES ('ARG','Model04','Model 04 - Standard',1);
INSERT INTO REPORTTICKETLIST VALUES ('COL','PacificMetapetroleum','Pacific Metapetroleum',7);

ALTER TABLE TICKETWORKER
ADD RESUMEACTIVITY NVARCHAR(MAX) NULL;

ALTER TABLE INVENTORYITEM
ADD VENDORID NVARCHAR(300) NULL
,VENDOR NVARCHAR(300) NULL
,BRAND NVARCHAR(300) NULL;

ALTER VIEW TICKETINVENTORYRPT_V AS
SELECT 
 II.INVENTORYITEMID
,II.DESCRIPTION as INVENTORYITEMNAME
,II.INVENTORYCLASSID
,II.DEFAULTPURCHASEUNIT AS UNIT
,TI.ITEMQTY
,T.TICKETID
,T.TICKETSTATUS
,T.JOBDESCRIPTION AS TICKETDESCRIPTION
,T.CUSTOMERID
,CUS.NAME AS CUSTOMERNAME
,CTR.CONTRACTNUMBER AS CONTRACTID
,TSI.CUSTCODEITEM AS SALESITEMID
,TSI.DESCRIPTION AS SALESITEMDESCRIPTION
,UCTICKET.NAME AS [CREATEDBY]
,T.DATESERVICE AS SERVICEDATE
,W.NAME AS WELL
,T.RIGID as RIG
,TH.COMMENTS
,[CURRENCY]
,IIF([CURRENCY]='USD',[PRICEUNITUSD],[PRICEUNIT]) AS PRICEUNIT
,TSI.[ITEMQTY] as SALESITEMQTY
,IIF([CURRENCY]='USD',[ITEMAMOUNTNODISCUSD],[ITEMAMOUNTNODISC]) AS ITEMAMOUNTNODISC
,[ITEMDISC]
,IIF([CURRENCY]='USD',[ITEMAMOUNTUSD],[ITEMAMOUNT]) AS ITEMAMOUNT
FROM 
TICKET T 
  INNER JOIN CONTRACT CTR ON (T.CONTRACTID = CTR.CONTRACTID)
  INNER JOIN CUSTOMER CUS ON (T.CUSTOMERID = CUS.CUSTOMERID)
  INNER JOIN TICKETSALESITEM TSI ON (T.TICKETID = TSI.TICKETID)
  INNER JOIN TICKETINVLINE TI ON (TSI.TICKETSALESITEMID = TI.TICKETSALESITEMID)
  INNER JOIN TICKETINVHEADER TH ON (TH.TICKETID = T.TICKETID AND TI.TICKETINVHEADERID=TH.TICKETINVHEADERID)
  INNER JOIN INVENTORYITEM II ON (TH.INVENTORYITEMID = II.INVENTORYITEMID)
  INNER JOIN [USER] UCTICKET ON (T.CREATEDUSER = UCTICKET.USERNAME)
  INNER JOIN WELL W ON (W.WELLID = T.WELLID);
  
CREATE VIEW TICKETINVHEADER_V AS
SELECT 
T.TICKETID
,UCTICKET.NAME AS CREATEDBY
,T.DATESERVICE
,T.TICKETSTATUS
,W.NAME AS WELLNAME
,CUS.CUSTOMERID
,CUS.NAME AS CUSTOMERNAME
,CTR.CONTRACTNUMBER
,II.INVENTORYITEMID
,II.ABBREVIATION
,II.DESCRIPTION AS INVITEMDESCRIP
,II.INVENTORYCLASSID
,TH.CONSUMPTION
,TH.COMMENTS
FROM 
TICKET T 
  INNER JOIN CONTRACT CTR ON (T.CONTRACTID = CTR.CONTRACTID)
  INNER JOIN CUSTOMER CUS ON (T.CUSTOMERID = CUS.CUSTOMERID)
  INNER JOIN TICKETINVHEADER TH ON (TH.TICKETID = T.TICKETID)
  INNER JOIN INVENTORYITEM II ON (TH.INVENTORYITEMID = II.INVENTORYITEMID)
  INNER JOIN [USER] UCTICKET ON (T.CREATEDUSER = UCTICKET.USERNAME)
  INNER JOIN WELL W ON (W.WELLID = T.WELLID);

CREATE VIEW TICKETHSEQ_V AS
SELECT 
T.TICKETID
,UCTICKET.NAME AS CREATEDBY
,T.DATESERVICE
,T.TICKETSTATUS
,W.NAME AS WELLNAME
,CUS.CUSTOMERID
,CUS.NAME AS CUSTOMERNAME
,CTR.CONTRACTNUMBER
,TH.SERVICEDATE AS SERVICEDATEEVAL
,TH.SERVDESCRIP 
,TH.EVAL_PERSONAL 
,TH.EVAL_EQUIPMENT 
,TH.EVAL_COMUNICATION 
,TH.EVAL_HSEQ_PERF 
,TH.EVAL_GENERALPERCEP 
,TH.OBS 
FROM 
TICKET T 
  INNER JOIN CONTRACT CTR ON (T.CONTRACTID = CTR.CONTRACTID)
  INNER JOIN CUSTOMER CUS ON (T.CUSTOMERID = CUS.CUSTOMERID)
  INNER JOIN TICKETSERVEVAL_HSEQ TH ON (TH.TICKETID = T.TICKETID)
  INNER JOIN [USER] UCTICKET ON (T.CREATEDUSER = UCTICKET.USERNAME)
  INNER JOIN WELL W ON (W.WELLID = T.WELLID)
