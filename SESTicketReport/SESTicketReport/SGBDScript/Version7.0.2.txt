ALTER VIEW [dbo].[TICKETHEADERRPT_V] AS
WITH TICKETAMOUNT (
TICKETID, 
ITEMAMOUNTNODISC_COP, DISCVALUE_COP, ITEMAMOUNT_COP,
ITEMAMOUNTNODISC_USD, DISCVALUE_USD, ITEMAMOUNT_USD) AS
(
SELECT 
 TS.TICKETID
,sum(TS.ITEMAMOUNTNODISC   ) AS ITEMAMOUNTNODISC_COP
,sum(TS.DISCVALUE          ) AS DISCVALUE_COP
,sum(TS.ITEMAMOUNT         ) AS ITEMAMOUNT_COP
,sum(TS.ITEMAMOUNTNODISCUSD) AS ITEMAMOUNTNODISC_USD
,sum(TS.DISCVALUEUSD       ) AS DISCVALUE_USD
,sum(TS.ITEMAMOUNTUSD      ) AS ITEMAMOUNT_USD
FROM TICKETSALESITEM TS
GROUP BY TS.TICKETID
)
SELECT 
 T.TICKETID
,T.DATESERVICE
,(SELECT U.NAME FROM [USER] U WHERE U.USERNAME = T.CREATEDUSER) AS CREATEDUSER
,T.CREATEDDATETIME
,T.CUSTOMERID AS CUSTOMERCODE
,C.NAME AS CUSTOMERNAME
,CT.CONTRACTNUMBER AS CONTRACT
,T.SERVICETYPEGRPCODE AS SERVICETYPECODE
,T.SERVICETYPEGRPTEXT AS SERVICETYPE
,T.WELLID
,T.RIGID AS RIG
,T.EXCHANGERATE
,T.CURRENCYID
,CASE T.CURRENCYID WHEN 'USD' THEN TA.ITEMAMOUNTNODISC_USD ELSE TA.ITEMAMOUNTNODISC_COP END AS ITEMAMOUNTNODISC
,CASE T.CURRENCYID WHEN 'USD' THEN TA.DISCVALUE_USD ELSE TA.DISCVALUE_COP END AS DISCVALUE
,CASE T.CURRENCYID WHEN 'USD' THEN TA.ITEMAMOUNT_USD ELSE TA.ITEMAMOUNT_COP END AS ITEMAMOUNT
,T.TIMEARRIVED
,T.TIMESTARTED
,T.TIMECOMPLETED
,T.CASINGSIZE
,T.CASINGWEIGHT
,T.CASINGGRADE
,T.TUBINGSIZE
,T.TUBINGWEIGHT
,T.TUBINGGRADE
,T.PRESSUREMAX
,T.DEPTHMAX
,T.JOBDESCRIPTION
,T.CUSTREPRES
,T.CUSTREPRESPOSITION
,T.CUSTREPRESASSIST
,(CONTREP.[NAME1] + ' ' +
CASE WHEN CONTREP.[NAME2] IS NULL OR CONTREP.[NAME2]='' THEN '' ELSE LEFT(CONTREP.[NAME2],1) + '. ' END +
CASE WHEN CONTREP.[SURNAME1] IS NULL OR CONTREP.[NAME2]='' THEN '' ELSE LEFT(CONTREP.[SURNAME1],1) + '. ' END +
CONTREP.[SURNAME2]) AS CONTRACTORREPRESENTATIVE
,T.CUSTCOMMENTS
,T.CONTRACTCOMMENTS
,T.TICKETSTATUS
,T.UPDATEDDATETIME
,(SELECT U.NAME FROM [USER] U WHERE U.USERNAME = T.UPDATEDUSER) AS UPDATEDUSER
,T.CANCELDATETIME
,(SELECT U.NAME FROM [USER] U WHERE U.USERNAME = T.CANCELUSER) AS CANCELUSER
,T.CANCELREASON
,STUFF((SELECT ' / ' + INV.LINETYPE + ': ' + INVOICESTATUS AS "text()" 
		FROM  TICKETINVOICE INV
		WHERE INV.TICKETID = T.TICKETID
     FOR XML PATH('')),1,3, '') AS INVOICESTATUS
,STUFF((SELECT ' / ' + 'Invoice: ' + ISNULL(LINE.INVOICENUMBER,'') + ' Amount: ' + CAST(LINE.INVOICEAMOUNT AS VARCHAR) 
		+ ' (' + INV.LINETYPE + ')' AS "text()" 
		FROM  TICKETINVOICE INV
		INNER JOIN TICKETINVOICELINE LINE ON (INV.TICKETINVOICEID = LINE.TICKETINVOICEID)
		WHERE INV.TICKETID = T.TICKETID AND LINE.ACTIVE = 'YES'
     FOR XML PATH('')),1,3, '') AS INVOICENNUMBER
,(SELECT  SUM(LINE.INVOICEAMOUNT) 
		FROM  TICKETINVOICE INV
		INNER JOIN TICKETINVOICELINE LINE ON (INV.TICKETINVOICEID = LINE.TICKETINVOICEID)
		WHERE INV.TICKETID = T.TICKETID AND LINE.ACTIVE = 'YES') AS INVOICEAMOUNT
,T.SUPERIORNUM 
,T.DM
,ST.ALIAS AS SITE
,(SELECT COUNT(*) FROM TICKETSERVICETYPE TS WHERE T.TICKETID = TS.TICKETID) AS QTDE_SERVICETYPE
,SL.SERVICELINEID 
,SL.NAME AS SERVICELINENAME
FROM TICKET T  
   INNER JOIN CUSTOMER C  ON (T.CUSTOMERID = C.CUSTOMERID)
   INNER JOIN CONTRACT CT ON (T.CONTRACTID = CT.CONTRACTID)
   LEFT JOIN WORKER CONTREP ON (T.CONTRACTORREPRESENTATIVE = CONTREP.WORKERID)
   INNER JOIN WELL W ON (T.WELLID = W.WELLID)
   INNER JOIN [SITE] ST ON (ST.SITEID = w.SITEID)
   LEFT JOIN TICKETAMOUNT TA ON (TA.TICKETID = T.TICKETID)
   INNER JOIN SERVICELINE SL ON (T.SERVICELINEID = SL.SERVICELINEID)




ALTER  PROCEDURE [dbo].[sp_TicketHeaderRpt]
    @ServiceDateBegin   datetime     = null
   ,@ServiceDateEnd     datetime     = null
   ,@TicketId	     varchar(50)  = null
   ,@CreatedBy		 varchar(max)  = null
   ,@TicketStatus    varchar(max) = null
   ,@TicketSiteID    varchar(3) = null
   ,@ServiceLineID	 int = null
AS
BEGIN
 
    ----------------------
    -- Tratando Parametros
    ----------------------
    set @ServiceDateBegin = cast(floor(cast(@ServiceDateBegin as float)) as datetime);
    set @ServiceDateEnd = cast(floor(cast(@ServiceDateEnd as float)) as datetime);
    set @TicketId = UPPER(replace(@TicketId,'*','%'));

	----------------------
    -- Execução
    ----------------------
    SELECT *
  FROM TICKETHEADERRPT_V
  where
		1 = 1
	and cast(floor(cast(DATESERVICE as float)) as datetime)  between @ServiceDateBegin and @ServiceDateEnd
	and (TICKETID = @TicketId or (@TicketId = '' or @TicketId is null) or TICKETID like @TicketId)
	and (CREATEDUSER like '%'+ @CreatedBy + '%' OR @CreatedBy is null or @CreatedBy='')
	and (TICKETSTATUS in (select * from dbo.fnStringMultValues (@TicketStatus)) OR @TicketStatus is null or @TicketStatus=''  )
	and (@TicketSiteID is null or (@TicketSiteID is not null and [SITE] =  @TicketSiteID))
	and (@ServiceLineID is null or (@ServiceLineID is not null and [SERVICELINEID] =  @ServiceLineID))
	order by TICKETID asc

END




GO